/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package arquiproyectoalfa;

import javax.swing.JOptionPane;

/**
 *
 * @author Jason
 */
public class Calculadora extends javax.swing.JFrame {

    /**
     * Creates new form Calculadora
     */
    private ListaCircularDE lista1;
    private ListaCircularDE lista2;
    private ListaCircularDE listaResultados;
    private boolean auxOperacion = false;

    public Calculadora() {
        initComponents();
        setLocationRelativeTo(null);
        lista1 = new ListaCircularDE();
        lista2 = new ListaCircularDE();
        listaResultados = new ListaCircularDE();
        this.setResizable(false);
        
//        this.jTextAreaPrimerNumero.setLineWrap(true);
//        this.jTextAreaSegundoNumero.setLineWrap(true);
        this.jTextAreaResultado.setLineWrap(true);

        this.jButtonPrimerNumero.setEnabled(true);
        this.jButtonSegundoNumero.setEnabled(false);
        this.habilitarDeshabilitarNumeros(false);
        this.habilitarDeshabilitarOperaciones(false);
        this.jButtonComa.setEnabled(false);
        this.jButtonSignoNegativo.setEnabled(false);
        this.jButtonSigNumero.setEnabled(false);
        this.jButtonLimpiar.setEnabled(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaPrimerNumero = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButtonComa = new javax.swing.JButton();
        jButtonSigNumero = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButtonPrimerNumero = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton0 = new javax.swing.JButton();
        jButtonSegundoNumero = new javax.swing.JButton();
        jButtonSignoNegativo = new javax.swing.JButton();
        jButtonSumar = new javax.swing.JButton();
        jButtonRestar = new javax.swing.JButton();
        jButtonComparar = new javax.swing.JButton();
        jButtonMultiplicar = new javax.swing.JButton();
        jButtonLimpiar = new javax.swing.JButton();
        jButtonDividir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaSegundoNumero = new javax.swing.JTextArea();
        jLabelOperacion = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaResultado = new javax.swing.JTextArea();
        jLabelOperacion1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextAreaPrimerNumero.setEditable(false);
        jScrollPane1.setViewportView(jTextAreaPrimerNumero);

        jButton2.setText("2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButtonComa.setText(",");
        jButtonComa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonComaActionPerformed(evt);
            }
        });

        jButtonSigNumero.setText("Sig. Número");
        jButtonSigNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSigNumeroActionPerformed(evt);
            }
        });

        jButton1.setText("1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButtonPrimerNumero.setText("Primer Número");
        jButtonPrimerNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrimerNumeroActionPerformed(evt);
            }
        });

        jButton3.setText("3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("5");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("6");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("7");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("8");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("9");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton0.setText("0");
        jButton0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton0ActionPerformed(evt);
            }
        });

        jButtonSegundoNumero.setText("Segundo Número");
        jButtonSegundoNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSegundoNumeroActionPerformed(evt);
            }
        });

        jButtonSignoNegativo.setText("Signo ( - )");
        jButtonSignoNegativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSignoNegativoActionPerformed(evt);
            }
        });

        jButtonSumar.setText("Sumar");
        jButtonSumar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSumarActionPerformed(evt);
            }
        });

        jButtonRestar.setText("Restar");
        jButtonRestar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRestarActionPerformed(evt);
            }
        });

        jButtonComparar.setText("Comparar");
        jButtonComparar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCompararActionPerformed(evt);
            }
        });

        jButtonMultiplicar.setText("Multiplicar");
        jButtonMultiplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMultiplicarActionPerformed(evt);
            }
        });

        jButtonLimpiar.setText("Limpiar");
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });

        jButtonDividir.setText("Dividir");
        jButtonDividir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDividirActionPerformed(evt);
            }
        });

        jTextAreaSegundoNumero.setEditable(false);
        jScrollPane2.setViewportView(jTextAreaSegundoNumero);

        jLabelOperacion.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabelOperacion.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTextAreaResultado.setEditable(false);
        jScrollPane3.setViewportView(jTextAreaResultado);

        jLabelOperacion1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelOperacion1.setText("=");
        jLabelOperacion1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelOperacion1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton6))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton7)
                                            .addComponent(jButtonComa))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jButton8)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton9))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jButton0)
                                                .addGap(45, 45, 45))))
                                    .addComponent(jButtonSignoNegativo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonPrimerNumero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(35, 35, 35)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jButtonSumar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButtonRestar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButtonMultiplicar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButtonDividir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButtonComparar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonSegundoNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButtonLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonSigNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonPrimerNumero)
                    .addComponent(jButtonSegundoNumero)
                    .addComponent(jButtonSigNumero))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jButton3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jButton5)
                            .addComponent(jButton6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton7)
                            .addComponent(jButton8)
                            .addComponent(jButton9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonComa)
                            .addComponent(jButton0))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSignoNegativo))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonSumar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRestar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonMultiplicar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDividir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonComparar)
                            .addComponent(jButtonLimpiar))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelOperacion1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPrimerNumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrimerNumeroActionPerformed
        auxOperacion = false;
        this.jButtonPrimerNumero.setEnabled(false);
        this.habilitarDeshabilitarNumeros(true);
        this.jButtonComa.setEnabled(true);
        this.jButtonSignoNegativo.setEnabled(true);

    }//GEN-LAST:event_jButtonPrimerNumeroActionPerformed

    private void jButtonSegundoNumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSegundoNumeroActionPerformed
        if (!lista1.estaVacia()) {
            auxOperacion = true;
            this.jButtonSignoNegativo.setEnabled(true);
            this.jButtonComa.setEnabled(true);
            this.jButtonPrimerNumero.setEnabled(false);
            this.habilitarDeshabilitarOperaciones(true);
        } else {
            auxOperacion = false;
            this.habilitarDeshabilitarNumeros(false);
            this.jButtonSignoNegativo.setEnabled(false);
            this.jButtonComa.setEnabled(false);
        }

    }//GEN-LAST:event_jButtonSegundoNumeroActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (auxOperacion == false) {
            lista1.ingresarNodoAlFinal("1");
            this.jTextAreaPrimerNumero.setText(lista1.imprimirLista());
            this.jButtonSegundoNumero.setEnabled(true);
        } else {
            lista2.ingresarNodoAlFinal("1");
            this.jTextAreaSegundoNumero.setText(lista2.imprimirLista());
        }
        this.jButtonSignoNegativo.setEnabled(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (auxOperacion == false) {
            lista1.ingresarNodoAlFinal("2");
            this.jTextAreaPrimerNumero.setText(lista1.imprimirLista());
            this.jButtonSegundoNumero.setEnabled(true);
        } else {
            lista2.ingresarNodoAlFinal("2");
            this.jTextAreaSegundoNumero.setText(lista2.imprimirLista());
        }
        this.jButtonSignoNegativo.setEnabled(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (auxOperacion == false) {
            lista1.ingresarNodoAlFinal("3");
            this.jTextAreaPrimerNumero.setText(lista1.imprimirLista());
            this.jButtonSegundoNumero.setEnabled(true);
        } else {
            lista2.ingresarNodoAlFinal("3");
            this.jTextAreaSegundoNumero.setText(lista2.imprimirLista());
        }
        this.jButtonSignoNegativo.setEnabled(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (auxOperacion == false) {
            lista1.ingresarNodoAlFinal("4");
            this.jTextAreaPrimerNumero.setText(lista1.imprimirLista());
            this.jButtonSegundoNumero.setEnabled(true);
        } else {
            lista2.ingresarNodoAlFinal("4");
            this.jTextAreaSegundoNumero.setText(lista2.imprimirLista());
        }
        this.jButtonSignoNegativo.setEnabled(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (auxOperacion == false) {
            lista1.ingresarNodoAlFinal("5");
            this.jTextAreaPrimerNumero.setText(lista1.imprimirLista());
            this.jButtonSegundoNumero.setEnabled(true);
        } else {
            lista2.ingresarNodoAlFinal("5");
            this.jTextAreaSegundoNumero.setText(lista2.imprimirLista());
        }
        this.jButtonSignoNegativo.setEnabled(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (auxOperacion == false) {
            lista1.ingresarNodoAlFinal("6");
            this.jTextAreaPrimerNumero.setText(lista1.imprimirLista());
            this.jButtonSegundoNumero.setEnabled(true);
        } else {
            lista2.ingresarNodoAlFinal("6");
            this.jTextAreaSegundoNumero.setText(lista2.imprimirLista());
        }
        this.jButtonSignoNegativo.setEnabled(false);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if (auxOperacion == false) {
            lista1.ingresarNodoAlFinal("7");
            this.jTextAreaPrimerNumero.setText(lista1.imprimirLista());
            this.jButtonSegundoNumero.setEnabled(true);
        } else {
            lista2.ingresarNodoAlFinal("7");
            this.jTextAreaSegundoNumero.setText(lista2.imprimirLista());
        }
        this.jButtonSignoNegativo.setEnabled(false);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if (auxOperacion == false) {
            lista1.ingresarNodoAlFinal("8");
            this.jTextAreaPrimerNumero.setText(lista1.imprimirLista());
            this.jButtonSegundoNumero.setEnabled(true);
        } else {
            lista2.ingresarNodoAlFinal("8");
            this.jTextAreaSegundoNumero.setText(lista2.imprimirLista());
        }
        this.jButtonSignoNegativo.setEnabled(false);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        if (auxOperacion == false) {
            lista1.ingresarNodoAlFinal("9");
            this.jTextAreaPrimerNumero.setText(lista1.imprimirLista());
            this.jButtonSegundoNumero.setEnabled(true);
        } else {
            lista2.ingresarNodoAlFinal("9");
            this.jTextAreaSegundoNumero.setText(lista2.imprimirLista());
        }
        this.jButtonSignoNegativo.setEnabled(false);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton0ActionPerformed
        if (auxOperacion == false) {
            lista1.ingresarNodoAlFinal("0");
            this.jTextAreaPrimerNumero.setText(lista1.imprimirLista());
            this.jButtonSegundoNumero.setEnabled(true);
        } else {
            lista2.ingresarNodoAlFinal("0");
            this.jTextAreaSegundoNumero.setText(lista2.imprimirLista());
        }
        this.jButtonSignoNegativo.setEnabled(false);
    }//GEN-LAST:event_jButton0ActionPerformed

    private void jButtonComaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonComaActionPerformed
        if (auxOperacion == false) {
            lista1.ingresarNodoAlFinal(",");
            this.jTextAreaPrimerNumero.setText(lista1.imprimirLista());
            this.jButtonSegundoNumero.setEnabled(true);
        } else {
            lista2.ingresarNodoAlFinal(",");
            this.jTextAreaSegundoNumero.setText(lista2.imprimirLista());
        }
        this.jButtonSignoNegativo.setEnabled(false);
        this.jButtonComa.setEnabled(false);
    }//GEN-LAST:event_jButtonComaActionPerformed

    private void jButtonSignoNegativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSignoNegativoActionPerformed
        if (auxOperacion == false) {
            lista1.ingresarNodoAlFinal("-");
            this.jTextAreaPrimerNumero.setText(lista1.imprimirLista());
            this.jButtonSegundoNumero.setEnabled(true);
        } else {
            lista2.ingresarNodoAlFinal("-");
            this.jTextAreaSegundoNumero.setText(lista2.imprimirLista());
        }
        this.jButtonSignoNegativo.setEnabled(false);
    }//GEN-LAST:event_jButtonSignoNegativoActionPerformed

    private void jButtonSumarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSumarActionPerformed

        if ((!lista1.estaVacia()) && (!lista2.estaVacia())) {

            if (lista1.verificadorComa(lista1) == false) {
                lista1.ingresarNodoAlFinal(",");
                lista1.ingresarNodoAlFinal("0");
            }
            if (lista2.verificadorComa(lista2) == false) {
                lista2.ingresarNodoAlFinal(",");
                lista2.ingresarNodoAlFinal("0");
            }

            this.sumar();
            this.jLabelOperacion.setText("+");
            this.jButtonSigNumero.setEnabled(true);
            this.habilitarDeshabilitarNumeros(false);
            this.jButtonComa.setEnabled(false);
            this.jButtonPrimerNumero.setEnabled(false);
            this.jButtonSegundoNumero.setEnabled(false);
            this.habilitarDeshabilitarOperaciones(false);
        } else {
            JOptionPane.showMessageDialog(null, "Ingrese los números requeridos.");
        }

    }//GEN-LAST:event_jButtonSumarActionPerformed

    private void jButtonCompararActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCompararActionPerformed

        if ((!lista1.estaVacia()) && (!lista2.estaVacia())) {
            if (lista1.verificadorComa(lista1) == false) {
                lista1.ingresarNodoAlFinal(",");
                lista1.ingresarNodoAlFinal("0");
            }
            if (lista2.verificadorComa(lista2) == false) {
                lista2.ingresarNodoAlFinal(",");
                lista2.ingresarNodoAlFinal("0");
            }

            if ((lista1.reconocerSigno(lista1) == false) && (lista2.reconocerSigno(lista2) == true)) {
                System.out.println("El primero es mayor.");
                this.jTextAreaResultado.setText("El primero es mayor.");
            }
            if ((lista1.reconocerSigno(lista1) == true) && (lista2.reconocerSigno(lista2) == false)) {
                System.out.println("El segundo es mayor.");
                this.jTextAreaResultado.setText("El segundo es mayor.");
            }
            if ((lista1.reconocerSigno(lista1) == false) && (lista2.reconocerSigno(lista2) == false)) {
                this.igualarListas(lista1, lista2);

                if ((lista1.comparar(lista1, lista2)) == 0) {
                    System.out.println("Ambos numeros son iguales.");
                    this.jTextAreaResultado.setText("Ambos numeros son iguales.");
                }
                if ((lista1.comparar(lista1, lista2)) == 1) {
                    System.out.println("El primero es mayor.");
                    this.jTextAreaResultado.setText("El primero es mayor.");
                }
                if ((lista1.comparar(lista1, lista2)) == 2) {
                    System.out.println("El segundo es mayor.");
                    this.jTextAreaResultado.setText("El segundo es mayor.");
                }

            }
            if ((lista1.reconocerSigno(lista1) == true) && (lista2.reconocerSigno(lista2) == true)) {
                lista1.borrarSigno(lista1);
                lista2.borrarSigno(lista2);
                this.igualarListas(lista1, lista2);

                if ((lista1.comparar(lista1, lista2)) == 0) {
                    System.out.println("Ambos numeros son iguales.");
                    this.jTextAreaResultado.setText("Ambos numeros son iguales.");
                }
                if ((lista1.comparar(lista1, lista2)) == 2) {
                    System.out.println("El primero es mayor.");
                    this.jTextAreaResultado.setText("El primero es mayor.");
                }
                if ((lista1.comparar(lista1, lista2)) == 1) {
                    System.out.println("El segundo es mayor.");
                    this.jTextAreaResultado.setText("El segundo es mayor.");
                }
            }

            this.jButtonPrimerNumero.setEnabled(false);
            this.jButtonSegundoNumero.setEnabled(false);
            this.jButtonSignoNegativo.setEnabled(false);
            this.jButtonComparar.setEnabled(false);
            this.habilitarDeshabilitarNumeros(false);
            this.jButtonComa.setEnabled(false);

        } else {
            JOptionPane.showMessageDialog(null, "Ingrese los números requeridos.");
        }

    }//GEN-LAST:event_jButtonCompararActionPerformed

    private void jButtonRestarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRestarActionPerformed

        if ((!lista1.estaVacia()) && (!lista2.estaVacia())) {
            if (lista1.verificadorComa(lista1) == false) {
                lista1.ingresarNodoAlFinal(",");
                lista1.ingresarNodoAlFinal("0");
            }
            if (lista2.verificadorComa(lista2) == false) {
                lista2.ingresarNodoAlFinal(",");
                lista2.ingresarNodoAlFinal("0");
            }

            boolean signo = lista2.reconocerSigno(lista2);
            if (signo == false) {
                lista2.ingresarNodoAlInicio("-");
            }
            if (signo == true) {
                lista2.borrarSigno(lista2);
            }
            this.sumar();

            this.jLabelOperacion.setText("-");
            this.jButtonSigNumero.setEnabled(true);
            this.habilitarDeshabilitarNumeros(false);
            this.jButtonComa.setEnabled(false);
            this.jButtonPrimerNumero.setEnabled(false);
            this.jButtonSegundoNumero.setEnabled(false);
            this.habilitarDeshabilitarOperaciones(false);
        } else {
            JOptionPane.showMessageDialog(null, "Ingrese los números requeridos.");
        }

    }//GEN-LAST:event_jButtonRestarActionPerformed

    private void jButtonSigNumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSigNumeroActionPerformed
        this.jTextAreaPrimerNumero.setText(lista1.imprimirLista());

        lista2.vaciarLista(lista2);
        listaResultados.vaciarLista(listaResultados);

        this.jTextAreaSegundoNumero.setText("");
        this.jTextAreaResultado.setText("");
        this.jLabelOperacion.setText("");
        auxOperacion = true;
        this.jButtonSignoNegativo.setEnabled(true);
        this.jButtonComa.setEnabled(true);
        this.habilitarDeshabilitarNumeros(true);
        this.habilitarDeshabilitarOperaciones(true);
        this.jButtonSigNumero.setEnabled(false);

    }//GEN-LAST:event_jButtonSigNumeroActionPerformed

    private void jButtonMultiplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMultiplicarActionPerformed
        Archivos archivo = new Archivos();
        if ((!lista1.estaVacia()) && (!lista2.estaVacia())) {
            if (lista1.verificadorComa(lista1) == false) {
                lista1.ingresarNodoAlFinal(",");
                lista1.ingresarNodoAlFinal("0");
            }
            if (lista2.verificadorComa(lista2) == false) {
                lista2.ingresarNodoAlFinal(",");
                lista2.ingresarNodoAlFinal("0");
            }

            boolean signolista1 = lista1.reconocerSigno(lista1);
            boolean signolista2 = lista2.reconocerSigno(lista2);
            int tamanioParaComa = lista1.encontrarTamañoDecimales() + lista2.encontrarTamañoDecimales();
            int tamanioLista1 = lista1.encontrarTamañoEnteros() + lista1.encontrarTamañoDecimales();

            if ((signolista1 == false) && (signolista2 == true)) {
                lista2.borrarSigno(lista2);
                lista1.borrarComa(lista1);
                lista2.borrarComa(lista2);

                for (int i = 0; i < tamanioLista1; i++) {
                    listaResultados.ingresarNodoAlFinal("0");
                }

                Multiplicacion mult = new Multiplicacion();
                mult.multiplicacion(lista1, lista2, listaResultados);

                listaResultados.ponerComa(listaResultados, tamanioParaComa);
                listaResultados.borrarCerosInnecesarios(listaResultados);
                listaResultados.ingresarNodoAlInicio("-");
                lista1.traspasoMultiplicacion(lista1, listaResultados);
                lista1.imprimirLista();
                
                this.jTextAreaResultado.setText(lista1.imprimirLista());

            }
            if ((signolista1 == true) && (signolista2 == false)) {
                lista1.borrarSigno(lista1);
                lista1.borrarComa(lista1);
                lista2.borrarComa(lista2);

                for (int i = 0; i < tamanioLista1 - 1; i++) {
                    listaResultados.ingresarNodoAlFinal("0");
                }

                Multiplicacion mult = new Multiplicacion();
                mult.multiplicacion(lista1, lista2, listaResultados);

                listaResultados.ponerComa(listaResultados, tamanioParaComa);
                listaResultados.borrarCerosInnecesarios(listaResultados);
                listaResultados.ingresarNodoAlInicio("-");
                lista1.traspasoMultiplicacion(lista1, listaResultados);
                lista1.imprimirLista();
                
                this.jTextAreaResultado.setText(lista1.imprimirLista());

            }
            if ((signolista1 == false) && (signolista2 == false)) {

                lista1.borrarComa(lista1);
                lista2.borrarComa(lista2);

                for (int i = 0; i < tamanioLista1; i++) {
                    listaResultados.ingresarNodoAlFinal("0");
                }

                Multiplicacion mult = new Multiplicacion();
                mult.multiplicacion(lista1, lista2, listaResultados);

                listaResultados.ponerComa(listaResultados, tamanioParaComa);
                listaResultados.borrarCerosInnecesarios(listaResultados);
                lista1.traspasoMultiplicacion(lista1, listaResultados);
                lista1.imprimirLista();
                
                this.jTextAreaResultado.setText(lista1.imprimirLista());

            }

            if ((signolista1 == true) && (signolista2 == true)) {
                lista1.borrarSigno(lista1);
                lista2.borrarSigno(lista2);
                lista1.borrarComa(lista1);
                lista2.borrarComa(lista2);

                for (int i = 0; i < tamanioLista1 - 1; i++) {
                    listaResultados.ingresarNodoAlFinal("0");
                }

                Multiplicacion mult = new Multiplicacion();
                mult.multiplicacion(lista1, lista2, listaResultados);

                listaResultados.ponerComa(listaResultados, tamanioParaComa);
                listaResultados.borrarCerosInnecesarios(listaResultados);
                lista1.traspasoMultiplicacion(lista1, listaResultados);
                lista1.imprimirLista();
                
                this.jTextAreaResultado.setText(lista1.imprimirLista());
            }

            this.jLabelOperacion.setText("x");
            this.jButtonSigNumero.setEnabled(true);
            this.habilitarDeshabilitarNumeros(false);
            this.jButtonComa.setEnabled(false);
            this.jButtonPrimerNumero.setEnabled(false);
            this.jButtonSegundoNumero.setEnabled(false);
            this.habilitarDeshabilitarOperaciones(false);

        } else {
            JOptionPane.showMessageDialog(null, "Ingrese los números requeridos.");
        }


    }//GEN-LAST:event_jButtonMultiplicarActionPerformed

    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed

        if ((!lista1.estaVacia()) && (!lista2.estaVacia())) {
            lista1.vaciarLista(lista1);
            lista2.vaciarLista(lista2);
            listaResultados.vaciarLista(listaResultados);

            this.jTextAreaPrimerNumero.setText("");
            this.jTextAreaSegundoNumero.setText("");
            this.jTextAreaResultado.setText("");
            this.jLabelOperacion.setText("");

            auxOperacion = false;
            this.jButtonPrimerNumero.setEnabled(true);
            this.jButtonSegundoNumero.setEnabled(false);
            this.habilitarDeshabilitarNumeros(false);
            this.habilitarDeshabilitarOperaciones(false);
            this.jButtonComa.setEnabled(false);
            this.jButtonSignoNegativo.setEnabled(false);
            this.jButtonSigNumero.setEnabled(false);
            this.jButtonLimpiar.setEnabled(true);

        } else {
            JOptionPane.showMessageDialog(null, "Aún no han sido ingresados ambos números.");
        }


    }//GEN-LAST:event_jButtonLimpiarActionPerformed

    private void jButtonDividirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDividirActionPerformed

        if ((!lista1.estaVacia()) && (!lista2.estaVacia())) {

            if (lista1.verificadorComa(lista1) == false) {
                lista1.ingresarNodoAlFinal(",");
                lista1.ingresarNodoAlFinal("0");
            }
            if (lista2.verificadorComa(lista2) == false) {
                lista2.ingresarNodoAlFinal(",");
                lista2.ingresarNodoAlFinal("0");
            }

            boolean signo = false;
            boolean signolista1 = lista1.reconocerSigno(lista1);
            boolean signolista2 = lista2.reconocerSigno(lista2);

            if ((signolista1 == false) && (signolista2 == false)) {
                signo = false;
            }
            if ((signolista1 == true) && (signolista2 == true)) {
                lista1.borrarSigno(lista1);
                lista2.borrarSigno(lista2);
                signo = false;
            }
            if ((signolista1 == true) && (signolista2 == false)) {
                lista1.borrarSigno(lista1);
                signo = true;
            }
            if ((signolista1 == false) && (signolista2 == true)) {
                lista2.borrarSigno(lista2);
                signo = true;
            }

            if (lista2.verificarDivisionesConCero(lista2) == true) {
                System.out.println("La división para 0 no está definida.");
                this.jTextAreaResultado.setText("La división para 0 no está definida.");
                lista1.vaciarLista(lista1);
                lista1.ingresarNodoAlFinal("0");
                lista1.ingresarNodoAlFinal(",");
                lista1.ingresarNodoAlFinal("0");
                lista2.vaciarLista(lista2);
                lista2.ingresarNodoAlFinal("0");
                lista2.ingresarNodoAlFinal(",");
                lista2.ingresarNodoAlFinal("0");
                listaResultados.vaciarLista(listaResultados);
                listaResultados.ingresarNodoAlFinal("0");
                listaResultados.ingresarNodoAlFinal(",");
                listaResultados.ingresarNodoAlFinal("0");
            } else {
                if (lista1.verificarDivisionesConCero(lista1) == true) {
                    System.out.println("0,0");
                    this.jTextAreaResultado.setText("0,0");
                    lista1.vaciarLista(lista1);
                    lista2.vaciarLista(lista2);
                    listaResultados.vaciarLista(listaResultados);
                    lista1.ingresarNodoAlFinal("0");
                    lista1.ingresarNodoAlFinal(",");
                    lista1.ingresarNodoAlFinal("0");
                    lista2.ingresarNodoAlFinal("0");
                    lista2.ingresarNodoAlFinal(",");
                    lista2.ingresarNodoAlFinal("0");
                    listaResultados.ingresarNodoAlFinal("0");
                    listaResultados.ingresarNodoAlFinal(",");
                    listaResultados.ingresarNodoAlFinal("0");
                } else {
                    lista1.borrarCerosInnecesarios(lista1);
                    lista2.borrarCerosInnecesarios(lista2);

                    int decimalesLista1 = this.lista1.encontrarTamañoDecimales();
                    int decimalesLista2 = this.lista2.encontrarTamañoDecimales();
                    int recorrerComa;

                    if (decimalesLista1 > decimalesLista2) {
                        recorrerComa = (decimalesLista1 - decimalesLista2);
                        this.lista1.borrarComa(lista1);
                        this.lista2.borrarComa(lista2);
                        for (int i = 0; i < recorrerComa; i++) {
                            this.lista2.ingresarNodoAlFinal("0");
                        }
                        lista1.borrarSoloCerosIzquierda(lista1);
                        lista2.borrarSoloCerosIzquierda(lista2);
                    }
                    if (decimalesLista1 < decimalesLista2) {
                        recorrerComa = (decimalesLista2 - decimalesLista1);
                        this.lista1.borrarComa(lista1);
                        this.lista2.borrarComa(lista2);
                        for (int i = 0; i < recorrerComa; i++) {
                            this.lista1.ingresarNodoAlFinal("0");
                        }
                        lista1.borrarSoloCerosIzquierda(lista1);
                        lista2.borrarSoloCerosIzquierda(lista2);
                    }
                    if (decimalesLista1 == decimalesLista2) {
                        this.lista1.borrarComa(lista1);
                        this.lista2.borrarComa(lista2);
                        lista1.borrarSoloCerosIzquierda(lista1);
                        lista2.borrarSoloCerosIzquierda(lista2);
                    }

                    System.out.println("");
                    DivisionSegundoIntento division = new DivisionSegundoIntento();
                    division.divisionSegundoIntento(lista1, lista2, listaResultados);
                    if (signo == true) {
                        listaResultados.ingresarNodoAlInicio("-");
                    }
                    lista1.traspasoMultiplicacion(lista1, listaResultados);
                    this.jTextAreaResultado.setText(lista1.imprimirLista());
                }
            }

            this.jLabelOperacion.setText("/");
            this.jButtonSigNumero.setEnabled(true);
            this.habilitarDeshabilitarNumeros(false);
            this.jButtonComa.setEnabled(false);
            this.jButtonPrimerNumero.setEnabled(false);
            this.jButtonSegundoNumero.setEnabled(false);
            this.habilitarDeshabilitarOperaciones(false);
        
        } else {
            JOptionPane.showMessageDialog(null, "Ingrese los números requeridos.");
        }


    }//GEN-LAST:event_jButtonDividirActionPerformed

    /**
     * @param args the command line arguments
     */
    public void habilitarDeshabilitarOperaciones(boolean habilitarDeshabilitar) {
        this.jButtonSumar.setEnabled(habilitarDeshabilitar);
        this.jButtonRestar.setEnabled(habilitarDeshabilitar);
        this.jButtonComparar.setEnabled(habilitarDeshabilitar);
        this.jButtonMultiplicar.setEnabled(habilitarDeshabilitar);
        this.jButtonDividir.setEnabled(habilitarDeshabilitar);
    }

    public void habilitarDeshabilitarNumeros(boolean habilitarDeshabilitar) {
        this.jButton1.setEnabled(habilitarDeshabilitar);
        this.jButton2.setEnabled(habilitarDeshabilitar);
        this.jButton3.setEnabled(habilitarDeshabilitar);
        this.jButton4.setEnabled(habilitarDeshabilitar);
        this.jButton5.setEnabled(habilitarDeshabilitar);
        this.jButton6.setEnabled(habilitarDeshabilitar);
        this.jButton7.setEnabled(habilitarDeshabilitar);
        this.jButton8.setEnabled(habilitarDeshabilitar);
        this.jButton9.setEnabled(habilitarDeshabilitar);
        this.jButton0.setEnabled(habilitarDeshabilitar);
    }

    public void igualarListas(ListaCircularDE lista1, ListaCircularDE lista2) {

        if (lista1.encontrarTamañoEnteros() > lista2.encontrarTamañoEnteros()) {
            int diferencia = lista1.encontrarTamañoEnteros() - lista2.encontrarTamañoEnteros();
            for (int i = 0; i < diferencia; i++) {
                lista2.ingresarNodoAlInicio("0");
            }

        }

        if (lista1.encontrarTamañoEnteros() < lista2.encontrarTamañoEnteros()) {
            int diferencia = lista2.encontrarTamañoEnteros() - lista1.encontrarTamañoEnteros();
            for (int i = 0; i < diferencia; i++) {
                lista1.ingresarNodoAlInicio("0");
            }
        }

        if (lista1.encontrarTamañoDecimales() > lista2.encontrarTamañoDecimales()) {
            int diferencia = lista1.encontrarTamañoDecimales() - lista2.encontrarTamañoDecimales();
            for (int i = 0; i < diferencia; i++) {
                lista2.ingresarNodoAlFinal("0");
            }

        }

        if (lista1.encontrarTamañoDecimales() < lista2.encontrarTamañoDecimales()) {
            int diferencia = lista2.encontrarTamañoDecimales() - lista1.encontrarTamañoDecimales();
            for (int i = 0; i < diferencia; i++) {
                lista1.ingresarNodoAlFinal("0");
            }
        }

    }

    public void sumar() {
        Archivos archivo = new Archivos();
        Suma sum = new Suma();
        boolean signoPrimerNum = lista1.reconocerSigno(lista1);
        boolean signoSegundoNum = lista2.reconocerSigno(lista2);

        if ((signoPrimerNum == false) && (signoSegundoNum == false)) {
            this.igualarListas(lista1, lista2);
            sum.sumaDePositivos(lista1, lista2);
            lista1.borrarCerosInnecesarios(lista1);
            lista1.imprimirLista();
            
            this.jTextAreaResultado.setText(lista1.imprimirLista());

        }
        if ((signoPrimerNum == true) && (signoSegundoNum == true)) {
            lista1.borrarSigno(lista1);
            lista2.borrarSigno(lista1);
            this.igualarListas(lista1, lista2);

            sum.sumaDePositivos(lista1, lista2);
            lista1.borrarCerosInnecesarios(lista1);
            lista1.ingresarNodoAlInicio("-");
            lista1.imprimirLista();
            
            this.jTextAreaResultado.setText(lista1.imprimirLista());
        }
        if ((signoPrimerNum == false) && (signoSegundoNum == true)) {
            lista2.borrarSigno(lista2);
            this.igualarListas(lista1, lista2);
            int comparacion = lista1.comparar(lista1, lista2);

            if (comparacion == 0) {
                lista1.vaciarLista(lista1);
                lista1.ingresarNodoAlFinal("0");
                lista1.ingresarNodoAlFinal(",");
                lista1.ingresarNodoAlFinal("0");
                lista1.imprimirLista();
                
                this.jTextAreaResultado.setText(lista1.imprimirLista());
            }
            if (comparacion == 1) {
                sum.sumaDeSignosDiferentes(lista1, lista2);
                lista1.borrarCerosInnecesarios(lista1);
                lista1.imprimirLista();
                
                this.jTextAreaResultado.setText(lista1.imprimirLista());
            }
            if (comparacion == 2) {
                sum.sumaDeSignosDiferentes(lista2, lista1);
                lista1.traspasoDeDatos(lista1, lista2);
                lista1.borrarCerosInnecesarios(lista1);
                lista1.ingresarNodoAlInicio("-");
                lista1.imprimirLista();
                
                this.jTextAreaResultado.setText(lista1.imprimirLista());
            }
        }
        if ((signoPrimerNum == true) && (signoSegundoNum == false)) {
            lista1.borrarSigno(lista1);
            this.igualarListas(lista1, lista2);
            int comparacion = lista1.comparar(lista1, lista2);

            if (comparacion == 0) {
                lista1.vaciarLista(lista1);
                lista1.ingresarNodoAlFinal("0");
                lista1.ingresarNodoAlFinal(",");
                lista1.ingresarNodoAlFinal("0");
                lista1.imprimirLista();
                
                this.jTextAreaResultado.setText(lista1.imprimirLista());
            }
            if (comparacion == 1) {
                sum.sumaDeSignosDiferentes(lista1, lista2);
                lista1.borrarCerosInnecesarios(lista1);
                lista1.ingresarNodoAlInicio("-");
                lista1.imprimirLista();
                
                this.jTextAreaResultado.setText(lista1.imprimirLista());
            }
            if (comparacion == 2) {
                sum.sumaDeSignosDiferentes(lista2, lista1);
                lista1.traspasoDeDatos(lista1, lista2);
                lista1.borrarCerosInnecesarios(lista1);
                lista1.imprimirLista();
                
                this.jTextAreaResultado.setText(lista1.imprimirLista());
            }
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculadora().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton0;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonComa;
    private javax.swing.JButton jButtonComparar;
    private javax.swing.JButton jButtonDividir;
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JButton jButtonMultiplicar;
    private javax.swing.JButton jButtonPrimerNumero;
    private javax.swing.JButton jButtonRestar;
    private javax.swing.JButton jButtonSegundoNumero;
    private javax.swing.JButton jButtonSigNumero;
    private javax.swing.JButton jButtonSignoNegativo;
    private javax.swing.JButton jButtonSumar;
    private javax.swing.JLabel jLabelOperacion;
    private javax.swing.JLabel jLabelOperacion1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextAreaPrimerNumero;
    private javax.swing.JTextArea jTextAreaResultado;
    private javax.swing.JTextArea jTextAreaSegundoNumero;
    // End of variables declaration//GEN-END:variables
}
